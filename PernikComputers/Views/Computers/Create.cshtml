@model PernikComputers.Models.ComputerCreateViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>ComputerCreateViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Barcode" class="control-label"></label>
                <input asp-for="Barcode" class="form-control" />
                <span asp-validation-for="Barcode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Manufacturer" class="control-label"></label>
                <input asp-for="Manufacturer" class="form-control" />
                <span asp-validation-for="Manufacturer" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Model" class="control-label"></label>
                <input asp-for="Model" class="form-control" />
                <span asp-validation-for="Model" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Warranty" class="control-label"></label>
                <input asp-for="Warranty" class="form-control" />
                <span asp-validation-for="Warranty" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsPromotion" /> @Html.DisplayNameFor(model => model.IsPromotion)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="ProcessorId" class="control-label"></label>
                <select asp-for="ProcessorId" class="form-control" asp-items="ViewBag.ProcessorId" onclick="SelectMotherboard()"></select>
            </div>
            <div class="form-group">
                <label asp-for="MotherboardId" class="control-label"></label>
                <select asp-for="MotherboardId" class="form-control" onclick="SelectRam()"></select>
            </div>
            <div class="form-group">
                <label asp-for="RamId" class="control-label"></label>
                <select asp-for="RamId" class="form-control"></select>
            </div>
            <div class="form-group">
                <label asp-for="VideoCardId" class="control-label"></label>
                <select asp-for="VideoCardId" class="form-control" asp-items="ViewBag.VideoCardId"></select>
            </div>
            <div class="form-group">
                <label asp-for="PowerSupplyId" class="control-label"></label>
                <select asp-for="PowerSupplyId" class="form-control" asp-items="ViewBag.PowerSupplyId"></select>
            </div>
            <div class="form-group">
                <label asp-for="MemoryId" class="control-label"></label>
                <select asp-for="MemoryId" class="form-control" asp-items="ViewBag.MemoryId"></select>
            </div>
            <div class="form-group">
                <label asp-for="ComputerCaseId" class="control-label"></label>
                <select asp-for="ComputerCaseId" class="form-control" asp-items="ViewBag.ComputerCaseId"></select>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input asp-for="Image" class="form-control" />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script>
    let processor = document.getElementById('ProcessorId')
    let motherboard = document.getElementById('MotherboardId')
    let ram = document.getElementById('RamId')
    let videoCard = document.getElementById('VideoCardId')
    let powerSupply = document.getElementById('PowerSupplyId')
    let memory = document.getElementById('MemoryId')
    let computerCase = document.getElementById('ComputerCaseId')

    motherboard.disabled = true
    ram.disabled = true

    let processorObj = null
    let motherboardObj = null


    function SelectMotherboard() {
        motherboard.length = 0
        let selectedProcessor = processor.options[processor.selectedIndex].value
        let allProcessors = @Html.Raw(Json.Serialize(@ViewBag.Processors));
        console.log(processor.textContent)

        if (selectedProcessor == 0) {
            location.reload()
        }

        for (var i = 0; i < allProcessors.length; i++) {
            if (selectedProcessor == allProcessors[i].id) {
                processorObj = allProcessors[i]
                break
            }
        }

        let allMotherboards = @Html.Raw(Json.Serialize(@ViewBag.Motherboards));
        for (var i = 0; i < allMotherboards.length; i++) {
            if (allMotherboards[i].socket == processorObj.socket) {
                let newOption = new Option(allMotherboards[i].model, allMotherboards[i].id)
                motherboard.add(newOption, undefined);
            }
        }

        motherboard.disabled = false
    }

    function SelectRam() {
        ram.length = 0

        let allMotherboars = @Html.Raw(Json.Serialize(@ViewBag.Motherboards));
        let selectedMotherboard = motherboard.options[motherboard.selectedIndex].value

        for (var i = 0; i < allMotherboars.length; i++) {
            if (selectedMotherboard == allMotherboars[i].id) {
                motherboardObj = allMotherboars[i]
                break
            }
        }

        let allRams = @Html.Raw(Json.Serialize(@ViewBag.Rams));

        for (var i = 0; i < allRams.length; i++) {
            if (allRams[i].typeRam == motherboardObj.typeRam) {
                let newOption1 = new Option(allRams[i].model, allRams[i].id)
                ram.add(newOption1, undefined);
            }
        }

        ram.disabled = false
    }


    SelectMotherboard()
    SelectRam()
    console.log('Hey')
</script>

<!--<script>
    let times = 1;
    let lasted = ''
    function GetProcessor() {
        if (times % 2 == 0) {
            let p = document.getElementById('ProcessorId')
            let selected = p.options[p.selectedIndex].value;
            lasted = selected
            console.log(selected)
        }
        times++
    }-->

    @*var data = @Html.Raw(Json.Serialize(@Model));
    console.log(data)*@
<!--</script>-->


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
